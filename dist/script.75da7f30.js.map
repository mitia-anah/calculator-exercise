{"version":3,"sources":["script.js"],"names":["keys","document","querySelectorAll","operators","decimalAdded","i","length","onclick","e","input","querySelector","inputVal","innerHTML","btnVal","equation","lastChar","replace","indexOf","eval","preventDefault"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["// Get all the keys from document\nvar keys = document.querySelectorAll('#calculator span');\nvar operators = ['+', '-', 'x', 'รท'];\nvar decimalAdded = false;\n\n// Add onclick event to all the keys and perform operations\nfor (var i = 0; i < keys.length; i++) {\n\tkeys[i].onclick = function (e) {\n\t\t// Get the input and button values\n\t\tvar input = document.querySelector('.screen');\n\t\tvar inputVal = input.innerHTML;\n\t\tvar btnVal = this.innerHTML;\n\n\t\t// Now, just append the key values (btnValue) to the input string and finally use javascript's eval function to get the result\n\t\t// If clear key is pressed, erase everything\n\t\tif (btnVal == 'C') {\n\t\t\tinput.innerHTML = '';\n\t\t\tdecimalAdded = false;\n\t\t}\n\n\t\t// If eval key is pressed, calculate and display the result\n\t\telse if (btnVal == '=') {\n\t\t\tvar equation = inputVal;\n\t\t\tvar lastChar = equation[equation.length - 1];\n\n\t\t\t// Replace all instances of x and รท with * and / respectively. This can be done easily using regex and the 'g' tag which will replace all instances of the matched character/substring\n\t\t\tequation = equation.replace(/x/g, '*').replace(/รท/g, '/');\n\n\t\t\t// Final thing left to do is checking the last character of the equation. If it's an operator or a decimal, remove it\n\t\t\tif (operators.indexOf(lastChar) > -1 || lastChar == '.')\n\t\t\t\tequation = equation.replace(/.$/, '');\n\n\t\t\tif (equation)\n\t\t\t\tinput.innerHTML = eval(equation);\n\n\t\t\tdecimalAdded = false;\n\t\t}\n\n\t\t// Basic functionality of the calculator is complete. But there are some problems like \n\t\t// 1. No two operators should be added consecutively.\n\t\t// 2. The equation shouldn't start from an operator except minus\n\t\t// 3. not more than 1 decimal should be there in a number\n\n\t\t// We'll fix these issues using some simple checks\n\n\t\t// indexOf works only in IE9+\n\t\telse if (operators.indexOf(btnVal) > -1) {\n\t\t\t// Operator is clicked\n\t\t\t// Get the last character from the equation\n\t\t\tvar lastChar = inputVal[inputVal.length - 1];\n\n\t\t\t// Only add operator if input is not empty and there is no operator at the last\n\t\t\tif (inputVal != '' && operators.indexOf(lastChar) == -1)\n\t\t\t\tinput.innerHTML += btnVal;\n\n\t\t\t// Allow minus if the string is empty\n\t\t\telse if (inputVal == '' && btnVal == '-')\n\t\t\t\tinput.innerHTML += btnVal;\n\n\t\t\t// Replace the last operator (if exists) with the newly pressed operator\n\t\t\tif (operators.indexOf(lastChar) > -1 && inputVal.length > 1) {\n\t\t\t\t// Here, '.' matches any character while $ denotes the end of string, so anything (will be an operator in this case) at the end of string will get replaced by new operator\n\t\t\t\tinput.innerHTML = inputVal.replace(/.$/, btnVal);\n\t\t\t}\n\n\t\t\tdecimalAdded = false;\n\t\t}\n\n\t\t// Now only the decimal problem is left. We can solve it easily using a flag 'decimalAdded' which we'll set once the decimal is added and prevent more decimals to be added once it's set. It will be reset when an operator, eval or clear key is pressed.\n\t\telse if (btnVal == '.') {\n\t\t\tif (!decimalAdded) {\n\t\t\t\tinput.innerHTML += btnVal;\n\t\t\t\tdecimalAdded = true;\n\t\t\t}\n\t\t}\n\n\t\t// if any other key is pressed, just append it\n\t\telse {\n\t\t\tinput.innerHTML += btnVal;\n\t\t}\n\n\t\t// prevent page jumps\n\t\te.preventDefault();\n\t}\n\n\n}"]}